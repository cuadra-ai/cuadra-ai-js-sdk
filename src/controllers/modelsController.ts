/**
 * Cuadra AILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import { ModelEx, modelExSchema } from '../models/modelEx';
import {
  PaginatedResponseExListModelEx,
  paginatedResponseExListModelExSchema,
} from '../models/paginatedResponseExListModelEx';
import { number, optional, string } from '../schema';
import { BaseController } from './baseController';
import { ErrorResponseError } from '../errors/errorResponseError';

export class ModelsController extends BaseController {
  /**
   * This endpoint display all of our AI models.
   *
   * @param page
   * @param size
   * @return Response from the API call
   */
  async getModels(
    page?: number,
    size?: number,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<PaginatedResponseExListModelEx>> {
    const req = this.createRequest('GET', '/model');
    const mapped = req.prepareArgs({
      page: [page, optional(number())],
      size: [size, optional(number())],
    });
    req.query('page', mapped.page);
    req.query('size', mapped.size);
    req.throwOn(
      400,
      ErrorResponseError,
      'Bad request, read again our documentation or contact support for guidance.'
    );
    req.throwOn(
      401,
      ErrorResponseError,
      'Not authorized, check our OAuth2 doc.'
    );
    req.throwOn(
      500,
      ErrorResponseError,
      'Internal error, if this error persist, please contact support.'
    );
    req.authenticate([{ oauth2: true }]);
    return req.callAsJson(paginatedResponseExListModelExSchema, requestOptions);
  }

  /**
   * This endpoint creates a new custom Model for you to train and use.
   *
   * @param body
   * @return Response from the API call
   */
  async createModel(
    body: ModelEx,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ModelEx>> {
    const req = this.createRequest('POST', '/model');
    const mapped = req.prepareArgs({ body: [body, modelExSchema] });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.throwOn(
      400,
      ErrorResponseError,
      'Bad request, read again our documentation or contact support for guidance.'
    );
    req.throwOn(
      401,
      ErrorResponseError,
      'Not authorized, check our OAuth2 doc.'
    );
    req.throwOn(
      500,
      ErrorResponseError,
      'Internal error, if this error persist, please contact support.'
    );
    req.authenticate([{ oauth2: true }]);
    return req.callAsJson(modelExSchema, requestOptions);
  }

  /**
   * This endpoint shows you information about a particular model given an id.
   *
   * @param id
   * @return Response from the API call
   */
  async getModel(
    id: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ModelEx>> {
    const req = this.createRequest('GET');
    const mapped = req.prepareArgs({ id: [id, string()] });
    req.appendTemplatePath`/model/${mapped.id}`;
    req.throwOn(
      400,
      ErrorResponseError,
      'Bad request, read again our documentation or contact support for guidance.'
    );
    req.throwOn(
      401,
      ErrorResponseError,
      'Not authorized, check our OAuth2 doc.'
    );
    req.throwOn(
      500,
      ErrorResponseError,
      'Internal error, if this error persist, please contact support.'
    );
    req.authenticate([{ oauth2: true }]);
    return req.callAsJson(modelExSchema, requestOptions);
  }

  /**
   * This endpoint removes a custom model you created.
   *
   * @param id
   * @return Response from the API call
   */
  async removeModel(
    id: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ModelEx>> {
    const req = this.createRequest('DELETE');
    const mapped = req.prepareArgs({ id: [id, string()] });
    req.appendTemplatePath`/model/${mapped.id}`;
    req.throwOn(
      400,
      ErrorResponseError,
      'Bad request, read again our documentation or contact support for guidance.'
    );
    req.throwOn(
      401,
      ErrorResponseError,
      'Not authorized, check our OAuth2 doc.'
    );
    req.throwOn(
      500,
      ErrorResponseError,
      'Internal error, if this error persist, please contact support.'
    );
    req.authenticate([{ oauth2: true }]);
    return req.callAsJson(modelExSchema, requestOptions);
  }

  /**
   * This endpoint updates a custom model you created.
   *
   * @param id
   * @param body
   * @return Response from the API call
   */
  async updateModel(
    id: string,
    body: ModelEx,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ModelEx>> {
    const req = this.createRequest('PATCH');
    const mapped = req.prepareArgs({
      id: [id, string()],
      body: [body, modelExSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.appendTemplatePath`/model/${mapped.id}`;
    req.throwOn(
      400,
      ErrorResponseError,
      'Bad request, read again our documentation or contact support for guidance.'
    );
    req.throwOn(
      401,
      ErrorResponseError,
      'Not authorized, check our OAuth2 doc.'
    );
    req.throwOn(
      500,
      ErrorResponseError,
      'Internal error, if this error persist, please contact support.'
    );
    req.authenticate([{ oauth2: true }]);
    return req.callAsJson(modelExSchema, requestOptions);
  }
}
